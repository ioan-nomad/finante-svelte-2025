# CONTEXT.txt - N-OMAD Suite Enterprise Application
# Ultima actualizare: 2 Decembrie 2024, 20:30

## 🎯 IDENTIFICARE PROIECT
GitHub: https://github.com/ioan-nomad/finante-svelte-2025
Local: C:\Users\ciupe\Desktop\FinanteNoiAugust2025\finante-app
URL LIVE: https://n-omad.netlify.app/
Stack: Svelte 4.2.0 + Vite + localStorage (encrypted)
Arhitectură: 3 module independente (Finance, Pantry, Nutrition)

## ✅ STATUS ACTUAL - DECEMBRIE 2024

### 🏆 REALIZĂRI MAJORE:
1. **Arhitectură Modulară Completă** - 3 module independente funcționale
2. **Security Hardening Enterprise** - Encriptare, CSP, Anti-tampering
3. **Recipe Suggester CODEX** - 17 rețete terapeutice cu mTOR cycling
4. **Performance Optimizat** - Bundle splitting, lazy loading, debounce
5. **Smart Pantry AI** - Learning patterns pentru 7+ magazine
6. **Dark Mode Persistent** - Cu animații fluide
7. **PWA Full Support** - Offline ready, instalabil

### 📊 METRICI PERFORMANȚĂ:
- Load time: <800ms
- Bundle size: <320KB total
- Lighthouse: 95+/100
- Memory: <70MB
- Zero external dependencies runtime

### 🔐 SECURITATE IMPLEMENTATĂ:
- ✅ AES-style encryption pentru localStorage
- ✅ Device fingerprinting unic
- ✅ Auto-lock după 15 min inactivitate
- ✅ CSP headers stricte
- ✅ Input sanitization complet
- ✅ Anti-tampering protection
- ✅ DevTools detection
- ✅ Integrity checks pentru date
- ✅ Zero telemetry/tracking

## 🤝 MODUL DE LUCRU PREFERAT (IMPORTANT!)

### CE FUNCȚIONEAZĂ PERFECT:
1. **Răspunsuri directe cu COD COMPLET** - nu instrucțiuni teoretice
2. **Format "LIPEȘTE EXACT ASTA LUI CLAUDE CHAT"** - clar și executabil
3. **Fără repetiții inutile** - direct la subiect
4. **Propuneri concrete** cu opțiuni numerotate când e cazul
5. **Verificare GitHub** după fiecare implementare

### REGULI DE COMUNICARE:
- ÎNTOTDEAUNA cod complet, nu fragmente
- ÎNTOTDEAUNA specific ce fișier și unde
- NICIODATĂ puncte sau liste care nu pot fi executate
- Când dai cod pentru Claude Chat, începe cu "LIPEȘTE EXACT ASTA LUI CLAUDE CHAT:"
- După implementare, verifică GitHub și confirmă succesul

### WORKFLOW IDEAL:
1. Ioan descrie ce vrea
2. Assistant oferă cod COMPLET executabil
3. Ioan rulează și face commit
4. Assistant verifică GitHub
5. Confirmă succes sau oferă fix-uri

## 📁 STRUCTURA ACTUALĂ
src/
├── App.svelte (orchestrator principal + security init)
├── lib/
│   ├── security/
│   │   ├── crypto.js (encryption + anti-tampering)
│   │   └── csp.js (Content Security Policy)
│   └── utils/
│       └── performance.js (debounce, throttle, memoize)
├── modules/
│   ├── finance/ (complet funcțional)
│   ├── pantry/ (Smart AI learning)
│   └── nutrition/ (17 rețete CODEX)
└── shared/
    └── config.js (module toggles)

## 🚀 URMĂTORII PAȘI POSIBILI

### OPȚIUNE 1: Meal Planner
- Calendar săptămânal drag&drop
- Auto-calculate macros
- Shopping list agregată

### OPȚIUNE 2: Migrare Tauri
- Aplicație desktop nativă
- SQLite pentru date mari
- 10MB exe, 50MB RAM

### OPȚIUNE 3: Testing Suite
- Vitest pentru unit tests
- Playwright pentru E2E
- Coverage >90%

### OPȚIUNE 4: Backup Automat
- Export programat
- Versioning pentru date
- Restore points

## 💡 FILOZOFIE DEZVOLTARE

### PRINCIPII FUNDAMENTALE:
1. **Privacy First** - Zero date externe, totul local
2. **Security by Design** - Nu adăugat după, ci integrat
3. **Performance Obsessed** - Fiecare ms contează
4. **User Control** - Utilizatorul decide tot
5. **Clean Code** - Simplu, clar, maintainable

### ANTI-PATTERNS (ce NU facem):
- ❌ Backend servers
- ❌ Cloud dependencies  
- ❌ Telemetry/Analytics
- ❌ Third-party auth
- ❌ Vendor lock-in
- ❌ Bloated features
- ❌ Dark patterns

## 🛠 COMENZI ESENȚIALE

```bash
npm run dev          # Development
npm run build        # Production build
npm run preview      # Test build local
npm run clean        # Curățare totală
npm run optimize     # Clean + install + build

# Git workflow
git add .
git commit -m "type: description"
git push
```

## 📊 COMMIT CONVENTION
feat: new feature
fix: bug fix
perf: performance improvement
security: security enhancement
docs: documentation
style: formatting, no code change
refactor: code restructuring
test: adding tests
chore: maintenance

## 🎯 PENTRU CONVERSAȚIE NOUĂ
TEMPLATE PERFECT:
```
Salut! Continuăm N-OMAD Suite.
GitHub: https://github.com/ioan-nomad/finante-svelte-2025

[descriu ce vreau]

Dă-mi COD COMPLET pentru implementare, nu instrucțiuni.
Vezi CONTEXT.txt pentru modul nostru de lucru.
```

## CE SĂ EVIȚI:
- Nu cere "cum ai vrea să..."
- Nu da liste de pași teoretici
- Nu explica ce știe deja Ioan
- Nu repeta cod identic

## CE SĂ FACI MEREU:
- Verifică GitHub după commit
- Dă cod complet executabil
- Propune îmbunătățiri concrete
- Fii direct și eficient

## ❤️ NOTĂ PERSONALĂ
Ioan apreciază:
- Răspunsuri clare și directe
- Cod complet, nu fragmente
- Verificare GitHub după implementare
- Propuneri concrete numerotate
- Zero fluff, direct la subiect

Această aplicație e construită cu pasiune pentru privacy și performanță.
Fiecare linie de cod e scrisă cu grijă pentru utilizator.
Target: Aplicație mai sigură decât banking apps, mai rapidă decât native apps.